<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LightInject.WebApi</name>
    </assembly>
    <members>
        <member name="T:LightInject.WebApiContainerExtensions">
            <summary>
            Extends the <see cref="T:LightInject.IServiceContainer"/> interface with methods that
            enables dependency injection in a Web API application.
            </summary>
        </member>
        <member name="M:LightInject.WebApiContainerExtensions.EnableWebApi(LightInject.IServiceContainer,System.Web.Http.HttpConfiguration)">
            <summary>
            Enables dependency injection in a Web API application.
            </summary>
            <param name="serviceContainer">The target <see cref="T:LightInject.IServiceContainer"/>.</param>
            <param name="httpConfiguration">The <see cref="T:System.Web.Http.HttpConfiguration"/> that represents the configuration of this Web API application.</param>
        </member>
        <member name="M:LightInject.WebApiContainerExtensions.RegisterApiControllers(LightInject.IServiceRegistry,System.Reflection.Assembly[])">
            <summary>
            Registers all <see cref="T:System.Web.Http.ApiController"/> implementations found in the given <paramref name="assemblies"/>.
            </summary>
            <param name="serviceRegistry">The target <see cref="T:LightInject.IServiceRegistry"/>.</param>
            <param name="assemblies">A list of assemblies from which to register <see cref="T:System.Web.Http.ApiController"/> implementations.</param>
        </member>
        <member name="M:LightInject.WebApiContainerExtensions.RegisterApiControllers(LightInject.IServiceRegistry)">
            <summary>
            Registers all <see cref="T:System.Web.Http.ApiController"/> implementations found in this assembly.
            </summary>
            <param name="serviceRegistry">The target <see cref="T:LightInject.IServiceRegistry"/>.</param>
        </member>
        <member name="T:LightInject.WebApi.LightInjectWebApiDependencyResolver">
            <summary>
            An <see cref="T:System.Web.Http.Dependencies.IDependencyResolver"/> adapter for the LightInject service container
            that enables <see cref="T:System.Web.Http.ApiController"/> instances and their dependencies to be
            resolved through the service container.
            </summary>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiDependencyResolver.#ctor(LightInject.IServiceContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:LightInject.WebApi.LightInjectWebApiDependencyResolver"/> class.
            </summary>
            <param name="serviceContainer">The <see cref="T:LightInject.IServiceContainer"/> instance to
            be used for resolving service instances.</param>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiDependencyResolver.Dispose">
            <summary>
            Disposes the underlying <see cref="T:LightInject.IServiceContainer"/>.
            </summary>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiDependencyResolver.GetService(System.Type)">
            <summary>
            Gets an instance of the given <paramref name="serviceType"/>.
            </summary>
            <param name="serviceType">The type of the requested service.</param>
            <returns>The requested service instance if available, otherwise null.</returns>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiDependencyResolver.GetServices(System.Type)">
            <summary>
            Gets all instance of the given <paramref name="serviceType"/>.
            </summary>
            <param name="serviceType">The type of services to resolve.</param>
            <returns>A list that contains all implementations of the <paramref name="serviceType"/>.</returns>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiDependencyResolver.BeginScope">
            <summary>
            Starts a new <see cref="T:System.Web.Http.Dependencies.IDependencyScope"/> that represents
            the scope for services registered with <see cref="T:LightInject.PerScopeLifetime"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Web.Http.Dependencies.IDependencyScope"/>.
            </returns>
        </member>
        <member name="T:LightInject.WebApi.LightInjectWebApiDependencyScope">
            <summary>
            An <see cref="T:System.Web.Http.Dependencies.IDependencyScope"/> implementation that wraps a <see cref="T:LightInject.Scope"/>.
            </summary>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiDependencyScope.#ctor(LightInject.IServiceContainer,LightInject.Scope)">
            <summary>
            Initializes a new instance of the <see cref="T:LightInject.WebApi.LightInjectWebApiDependencyScope"/> class.
            </summary>
            <param name="serviceContainer">The target <see cref="T:LightInject.IServiceContainer"/>.</param>
            <param name="scope">The wrapped <see cref="T:LightInject.Scope"/>.</param>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiDependencyScope.GetService(System.Type)">
            <summary>
            Gets an instance of the given <paramref name="serviceType"/>.
            </summary>
            <param name="serviceType">The type of the requested service.</param>
            <returns>The requested service instance if available, otherwise null.</returns>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiDependencyScope.GetServices(System.Type)">
            <summary>
            Gets all instance of the given <paramref name="serviceType"/>.
            </summary>
            <param name="serviceType">The type of services to resolve.</param>
            <returns>A list that contains all implementations of the <paramref name="serviceType"/>.</returns>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiDependencyScope.Dispose">
            <summary>
            Disposes the <see cref="T:LightInject.Scope"/>.
            </summary>
        </member>
        <member name="T:LightInject.WebApi.LightInjectWebApiFilterProvider">
            <summary>
            A <see cref="T:System.Web.Http.Filters.IFilterProvider"/> that uses an <see cref="T:LightInject.IServiceContainer"/>
            to inject property dependencies into <see cref="T:System.Web.Http.Filters.IFilter"/> instances.
            </summary>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiFilterProvider.#ctor(LightInject.IServiceContainer,System.Collections.Generic.IEnumerable{System.Web.Http.Filters.IFilterProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:LightInject.WebApi.LightInjectWebApiFilterProvider"/> class.
            </summary>
            <param name="serviceContainer">The <see cref="T:LightInject.IServiceContainer"/> instance
            used to inject property dependencies.</param>
            <param name="filterProviders">The list of existing filter providers.</param>
        </member>
        <member name="M:LightInject.WebApi.LightInjectWebApiFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Returns an enumeration of filters.
            </summary>
            <returns>
            An enumeration of filters.
            </returns>
            <param name="configuration">The HTTP configuration.</param><param name="actionDescriptor">The action descriptor.</param>
        </member>
    </members>
</doc>
