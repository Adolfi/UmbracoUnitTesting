<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Serilog.Sinks.Async</name>
    </assembly>
    <members>
        <member name="T:Serilog.LoggerConfigurationAsyncExtensions">
            <summary>
            Extends <see cref="T:Serilog.LoggerConfiguration"/> with methods for configuring asynchronous logging.
            </summary>
        </member>
        <member name="M:Serilog.LoggerConfigurationAsyncExtensions.Async(Serilog.Configuration.LoggerSinkConfiguration,System.Action{Serilog.Configuration.LoggerSinkConfiguration},System.Int32)">
            <summary>
            Configure a sink to be invoked asynchronously, on a background worker thread.
            </summary>
            <param name="loggerSinkConfiguration">The <see cref="T:Serilog.Configuration.LoggerSinkConfiguration"/> being configured.</param>
            <param name="configure">An action that configures the wrapped sink.</param>
            <param name="bufferSize">The size of the concurrent queue used to feed the background worker thread. If
            the thread is unable to process events quickly enough and the queue is filled, subsequent events will be
            dropped until room is made in the queue.</param>
            <returns>A <see cref="T:Serilog.LoggerConfiguration"/> allowing configuration to continue.</returns>
        </member>
        <member name="M:Serilog.LoggerConfigurationAsyncExtensions.Async(Serilog.Configuration.LoggerSinkConfiguration,System.Action{Serilog.Configuration.LoggerSinkConfiguration},System.Int32,System.Boolean)">
            <summary>
            Configure a sink to be invoked asynchronously, on a background worker thread.
            </summary>
            <param name="loggerSinkConfiguration">The <see cref="T:Serilog.Configuration.LoggerSinkConfiguration"/> being configured.</param>
            <param name="configure">An action that configures the wrapped sink.</param>
            <param name="bufferSize">The size of the concurrent queue used to feed the background worker thread. If
            the thread is unable to process events quickly enough and the queue is filled, depending on
            <paramref name="blockWhenFull"/> the queue will block or subsequent events will be dropped until
            room is made in the queue.</param>
            <param name="blockWhenFull">Block when the queue is full, instead of dropping events.</param>
            <returns>A <see cref="T:Serilog.LoggerConfiguration"/> allowing configuration to continue.</returns>
        </member>
        <member name="M:Serilog.LoggerConfigurationAsyncExtensions.Async(Serilog.Configuration.LoggerSinkConfiguration,System.Action{Serilog.Configuration.LoggerSinkConfiguration},Serilog.Sinks.Async.IAsyncLogEventSinkMonitor,System.Int32,System.Boolean)">
            <summary>
            Configure a sink to be invoked asynchronously, on a background worker thread.
            Accepts a reference to a <paramref name="monitor"/> that will be supplied the internal state interface for health monitoring purposes.
            </summary>
            <param name="loggerSinkConfiguration">The <see cref="T:Serilog.Configuration.LoggerSinkConfiguration"/> being configured.</param>
            <param name="configure">An action that configures the wrapped sink.</param>
            <param name="bufferSize">The size of the concurrent queue used to feed the background worker thread. If
            the thread is unable to process events quickly enough and the queue is filled, depending on
            <paramref name="blockWhenFull"/> the queue will block or subsequent events will be dropped until
            room is made in the queue.</param>
            <param name="blockWhenFull">Block when the queue is full, instead of dropping events.</param>
            <param name="monitor">Monitor to supply buffer information to.</param>
            <returns>A <see cref="T:Serilog.LoggerConfiguration"/> allowing configuration to continue.</returns>
        </member>
        <member name="T:Serilog.Sinks.Async.IAsyncLogEventSinkInspector">
            <summary>
            Provides a way to inspect the state of Async wrapper's ingestion queue.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.Async.IAsyncLogEventSinkInspector.BufferSize">
            <summary>
            Configured maximum number of items permitted to be held in the buffer awaiting ingestion.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The Sink has been disposed.</exception>
        </member>
        <member name="P:Serilog.Sinks.Async.IAsyncLogEventSinkInspector.Count">
            <summary>
            Current moment-in-time Count of items currently awaiting ingestion.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The Sink has been disposed.</exception>
        </member>
        <member name="P:Serilog.Sinks.Async.IAsyncLogEventSinkInspector.DroppedMessagesCount">
            <summary>
            Accumulated number of messages dropped due to breaches of <see cref="P:Serilog.Sinks.Async.IAsyncLogEventSinkInspector.BufferSize"/> limit.
            </summary>
        </member>
        <member name="T:Serilog.Sinks.Async.IAsyncLogEventSinkMonitor">
            <summary>
            Defines a mechanism for the Async Sink to afford Health Checks a buffer metadata inspection mechanism.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.Async.IAsyncLogEventSinkMonitor.StartMonitoring(Serilog.Sinks.Async.IAsyncLogEventSinkInspector)">
            <summary>
            Invoked by Sink to supply the inspector to the monitor.
            </summary>
            <param name="inspector">The Async Sink's inspector.</param>
        </member>
        <member name="M:Serilog.Sinks.Async.IAsyncLogEventSinkMonitor.StopMonitoring(Serilog.Sinks.Async.IAsyncLogEventSinkInspector)">
            <summary>
            Invoked by Sink to indicate that it is being Disposed.
            </summary>
            <param name="inspector">The Async Sink's inspector.</param>
        </member>
    </members>
</doc>
