<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Serilog.Sinks.Map</name>
    </assembly>
    <members>
        <member name="T:Serilog.MapLoggerConfigurationExtensions">
            <summary>
            Extends Serilog configuration with methods for selecting sink instances base on a log event property.
            </summary>
        </member>
        <member name="M:Serilog.MapLoggerConfigurationExtensions.Map(Serilog.Configuration.LoggerSinkConfiguration,System.String,System.String,System.Action{System.String,Serilog.Configuration.LoggerSinkConfiguration},System.Nullable{System.Int32},Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            Dispatch log events to a set of sinks keyed on a log event property.
            </summary>
            <param name="loggerSinkConfiguration">The logger sink configuration.</param>
            <param name="keyPropertyName">The name of a scalar-valued property to use as a sink selector.</param>
            <param name="defaultKey">The key value to use when the property is missing or <code>null</code>.
            A <code>null</code> default is allowed.</param>
            <param name="configure">An action to configure the target sink given a key property value.</param>
            <param name="sinkMapCountLimit">Limits the number of sinks that will be held open concurrently within the map.
            The default is to let the map grow unbounded; smaller numbers will cause sinks to be evicted when the limit is
            exceeded. To keep no sinks open, zero may be specified.</param>
            <param name="restrictedToMinimumLevel">The minimum log event level required 
            in order to write an event to the sink.</param>
            <param name="levelSwitch">A level switch to dynamically select the minimum level for events passed to the  sink.</param>
            <returns>Logger configuration, allowing configuration to continue.</returns>
            <exception cref="T:System.ArgumentNullException">A required parameter is null.</exception>
        </member>
        <member name="M:Serilog.MapLoggerConfigurationExtensions.Map``1(Serilog.Configuration.LoggerSinkConfiguration,System.String,``0,System.Action{``0,Serilog.Configuration.LoggerSinkConfiguration},System.Nullable{System.Int32},Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            Dispatch log events to a set of sinks keyed on a log event property.
            </summary>
            <param name="loggerSinkConfiguration">The logger sink configuration.</param>
            <param name="keyPropertyName">The name of a scalar-valued property to use as a sink selector.</param>
            <param name="configure">An action to configure the target sink given a key property value.</param>
            <param name="defaultKey">The key property value to use when no appropriate value is attached to the log event.</param>
            <param name="sinkMapCountLimit">Limits the number of sinks that will be held open concurrently within the map.
            The default is to let the map grow unbounded; smaller numbers will cause sinks to be evicted when the limit is
            exceeded. To keep no sinks open, zero may be specified.</param>
            <param name="restrictedToMinimumLevel">The minimum log event level required 
            in order to write an event to the sink.</param>
            <param name="levelSwitch">A level switch to dynamically select the minimum level for events passed to the  sink.</param>
            <returns>Logger configuration, allowing configuration to continue.</returns>
            <exception cref="T:System.ArgumentNullException">A required parameter is null.</exception>
        </member>
        <member name="M:Serilog.MapLoggerConfigurationExtensions.Map``1(Serilog.Configuration.LoggerSinkConfiguration,System.Func{Serilog.Events.LogEvent,``0},System.Action{``0,Serilog.Configuration.LoggerSinkConfiguration},System.Nullable{System.Int32},Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            Dispatch log events to a set of sinks keyed on a log event property.
            </summary>
            <param name="loggerSinkConfiguration">The logger sink configuration.</param>
            <param name="configure">An action to configure the target sink given a key property value.</param>
            <param name="keySelector">A function to select a key value given a log event.</param>
            <param name="sinkMapCountLimit">Limits the number of sinks that will be held open concurrently within the map.
            The default is to let the map grow unbounded; smaller numbers will cause sinks to be evicted when the limit is
            exceeded. To keep no sinks open, zero may be specified.</param>
            <param name="restrictedToMinimumLevel">The minimum log event level required 
            in order to write an event to the sink.</param>
            <param name="levelSwitch">A level switch to dynamically select the minimum level for events passed to the  sink.</param>
            <returns>Logger configuration, allowing configuration to continue.</returns>
            <exception cref="T:System.ArgumentNullException">A required parameter is null.</exception>
        </member>
        <member name="M:Serilog.MapLoggerConfigurationExtensions.Map(Serilog.Configuration.LoggerSinkConfiguration,System.String,System.Action{System.String,Serilog.Configuration.LoggerSinkConfiguration},System.Nullable{System.Int32},Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            Dispatch log events to a set of sinks keyed on a log event property.
            </summary>
            <param name="loggerSinkConfiguration">The logger sink configuration.</param>
            <param name="keyPropertyName">The name of a scalar-valued property to use as a sink selector.</param>
            <param name="configure">An action to configure the target sink given a key property value.</param>
            <param name="sinkMapCountLimit">Limits the number of sinks that will be held open concurrently within the map.
            The default is to let the map grow unbounded; smaller numbers will cause sinks to be evicted when the limit is
            exceeded. To keep no sinks open, zero may be specified.</param>
            <param name="restrictedToMinimumLevel">The minimum log event level required 
            in order to write an event to the sink.</param>
            <param name="levelSwitch">A level switch to dynamically select the minimum level for events passed to the  sink.</param>
            <returns>Logger configuration, allowing configuration to continue.</returns>
            <exception cref="T:System.ArgumentNullException">A required parameter is null.</exception>
        </member>
        <member name="M:Serilog.MapLoggerConfigurationExtensions.Map``1(Serilog.Configuration.LoggerSinkConfiguration,System.String,System.Action{``0,Serilog.Configuration.LoggerSinkConfiguration},System.Nullable{System.Int32},Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            Dispatch log events to a set of sinks keyed on a log event property.
            </summary>
            <param name="loggerSinkConfiguration">The logger sink configuration.</param>
            <param name="keyPropertyName">The name of a scalar-valued property to use as a sink selector.</param>
            <param name="configure">An action to configure the target sink given a key property value.</param>
            <param name="sinkMapCountLimit">Limits the number of sinks that will be held open concurrently within the map.
            The default is to let the map grow unbounded; smaller numbers will cause sinks to be evicted when the limit is
            exceeded. To keep no sinks open, zero may be specified.</param>
            <param name="restrictedToMinimumLevel">The minimum log event level required 
            in order to write an event to the sink.</param>
            <param name="levelSwitch">A level switch to dynamically select the minimum level for events passed to the  sink.</param>
            <returns>Logger configuration, allowing configuration to continue.</returns>
            <exception cref="T:System.ArgumentNullException">A required parameter is null.</exception>
        </member>
        <member name="M:Serilog.MapLoggerConfigurationExtensions.Map``1(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Sinks.Map.KeySelector{``0},System.Action{``0,Serilog.Configuration.LoggerSinkConfiguration},System.Nullable{System.Int32},Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            Dispatch log events to a set of sinks keyed on a log event property.
            </summary>
            <param name="loggerSinkConfiguration">The logger sink configuration.</param>
            <param name="configure">An action to configure the target sink given a key property value.</param>
            <param name="keySelector">A function to select a key value given a log event.</param>
            <param name="sinkMapCountLimit">Limits the number of sinks that will be held open concurrently within the map.
            The default is to let the map grow unbounded; smaller numbers will cause sinks to be evicted when the limit is
            exceeded. To keep no sinks open, zero may be specified.</param>
            <param name="restrictedToMinimumLevel">The minimum log event level required 
            in order to write an event to the sink.</param>
            <param name="levelSwitch">A level switch to dynamically select the minimum level for events passed to the  sink.</param>
            <returns>Logger configuration, allowing configuration to continue.</returns>
            <exception cref="T:System.ArgumentNullException">A required parameter is null.</exception>
        </member>
        <member name="T:Serilog.Sinks.Map.KeySelector`1">
            <summary>
            A function delegate to select a key value given a log event, if exists.
            </summary>
            <typeparam name="TKey">The type of the key value.</typeparam>
            <param name="logEvent">The log event.</param>
            <param name="key">The selected key.</param>
            <returns>true, if a key can be selected, or false, otherwise.</returns>
        </member>
    </members>
</doc>
